package es.curso.service;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.LinkedList;
import java.util.List;

import es.curso.model.Vacante;

public class VacantesServiceImpl implements IVacantesService {

	//lo hacemos privado a nievl clase
	private List<Vacante> lista = null;

	
	//constructor
	public VacantesServiceImpl() {
		// creamos lista obj de vacantes  el constructor 1 vez cada vez q se crea instancia
		lista = new LinkedList<Vacante>();
		SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
		
		try {
			
			//crear 3 objetos de tipo vacante
			Vacante vacante1 = new Vacante();
			vacante1.setId(1);
			vacante1.setNombre("Ingeniero Civil");
			vacante1.setDescripcion("Se solicita ingeniero para dar dise√±ar puente peatonal");
			vacante1.setFecha(sdf.parse("08-02-2024"));
			vacante1.setSalario(8500.0);
			vacante1.setDestacado(1);//esta vacante es destacada
			vacante1.setImagen("logo1.ico");
			
			Vacante vacante2 = new Vacante();
			vacante2.setId(2);
			vacante2.setNombre("Contador pubklivo");
			vacante2.setDescripcion("Empresa importante solicita auxiliar de contabilidad");
			vacante2.setFecha(sdf.parse("08-02-2022"));
			vacante2.setSalario(8000.0);
			vacante2.setDestacado(0);//esta vacante no es destacada
			vacante2.setImagen("spain-flag.jpg");
			
			Vacante vacante3 = new Vacante();
			vacante3.setId(3);
			vacante3.setNombre("Vendedor");
			vacante3.setDescripcion("Se solicita vendedor con experiencia en el area comercial");
			vacante3.setFecha(sdf.parse("08-02-2019"));
			vacante3.setSalario(10500.0);
			vacante3.setDestacado(0);//esta vacante no es destacada
			
			//agregar los objetos a la lista
			lista.add(vacante1);
			lista.add(vacante2);
			lista.add(vacante3);
			
			
		}catch(ParseException e) {
			System.out.println("Error: "+ e.getMessage());
		}
		
	}
	
	
	@Override
	public List<Vacante> buscarTodas() {
		
		return lista;
	}

}
